generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId           String      @id @default(uuid())
  nome             String
  cognome          String
  email            String      @unique
  hashPW           String
  hashRT           String
  ruolo            Role        @default(UTENTE)
  creazioneAccount DateTime    @default(now())
  updateAccount    DateTime    @updatedAt
  indirizzi        Indirizzo[] @relation("userIndirizzo")
  ordini           Ordine[]    @relation("userOrdine")
}

model Indirizzo {
  indirizzoId      String   @id @default(uuid())
  via              String
  civico           String
  citta            String
  userId           String
  updateIndirizzo  DateTime @updatedAt
  user             User     @relation("userIndirizzo", fields: [userId], references: [userId])
  ordiniEffettuati Ordine[] @relation("indrizzoOrdine")
}

model Candidati {
  CandidatoId String @id @default(uuid())
  email       String @unique
}

model Scarpe {
  scarpaId       String   @id @default(uuid())
  marca          String
  modello        String
  prezzoUnitario Float
  immagine       Bytes
  descrizione    String
  quantita       Int
  updateScarpa   DateTime @updatedAt
  ordini         Ordine[] @relation("scarpaOrdine")

  @@unique([marca, modello])
}

model Ordine {
  ordineId     String    @id @default(uuid())
  scarpe       Scarpe[]  @relation("scarpaOrdine")
  userId       String
  user         User      @relation("userOrdine", fields: [userId], references: [userId])
  indirizzoId  String
  indirizzo    Indirizzo @relation("indrizzoOrdine", fields: [indirizzoId], references: [indirizzoId])
  prezzoTotale Float
  dataConsegna DateTime
  consegnato   Boolean   @default(false)
  dataOrdine   DateTime  @default(now())
}

enum Role {
  MANAGER
  UTENTE
  ADMIN
}
